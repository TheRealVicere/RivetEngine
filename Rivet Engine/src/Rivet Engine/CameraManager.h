#ifndef CameraManager_H
#define CameraManager_H

class Camera;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	CameraManager
///
/// \brief	Manager for scene cameras.
///
/// \author	Mike Piunti
/// \date	02/28/2023
////////////////////////////////////////////////////////////////////////////////////////////////////

class CameraManager {
private:
	/// \brief	The default 3D camera.
	Camera* default3DCam;

	/// \brief	The current 3D camera.
	Camera* current3DCam;

	/// \brief	The default 2D camera.
	Camera* default2DCam;

	/// \brief	The current 2D camera.
	Camera* current2DCam;

public:
	CameraManager();
	CameraManager(const CameraManager&) = delete;
	CameraManager& operator=(const CameraManager&) = delete;
	~CameraManager();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	void CameraManager::SetCurrent3D(Camera* camera);
	///
	/// \brief	Sets the 3D camera to be used for rendering in a scene.
	///
	/// \param	camera	The new current camera.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void SetCurrent3D(Camera* camera);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	Camera* CameraManager::GetCurrent3D();
	///
	/// \brief	Gets the current 3D scene camera.
	///
	/// \returns	The current 3D scene camera.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	Camera* GetCurrent3D();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	void CameraManager::SetCurrent2D(Camera* camera);
	///
	/// \brief	Sets the 2D camera to be used for rendering in a scene.
	///
	/// \param	camera	The new current camera.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void SetCurrent2D(Camera* camera);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	Camera* CameraManager::GetCurrent2D();
	///
	/// \brief	Gets the current 2D scene camera.
	///
	/// \returns	The current 2D scene camera.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	Camera* GetCurrent2D();
};

#endif
