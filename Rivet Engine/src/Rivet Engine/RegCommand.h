#ifndef RegCommand_H
#define RegCommand_H

#include "RegDeregCommand.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	RegCommand
///
/// \brief	A command used for component registration.
///
/// \author	Mike Piunti
/// \date	04/12/2023
////////////////////////////////////////////////////////////////////////////////////////////////////
class RegCommand : public RegDeregCommand {
public:
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	RegCommand::RegCommand(Component* c);
	///
	/// \brief	Creates a command to register the given component.
	///
	/// \param	c	The component to register.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	RegCommand(Component* c);

	RegCommand() = delete;
	RegCommand(const RegCommand&) = delete;
	RegCommand& operator=(const RegCommand&) = delete;
	~RegCommand() = default;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	void RegCommand::Execute();
	///
	/// \brief	Registers the stored component.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void Execute();
};

#endif
