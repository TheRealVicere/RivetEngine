#ifndef SceneChangeCommand_H
#define SceneChangeCommand_H

#include "SceneCommand.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	SceneChangeCommand
///
/// \brief	A command to change game scenes.
///
/// \author	Mike Piunti
/// \date	02/28/2023
////////////////////////////////////////////////////////////////////////////////////////////////////

class SceneChangeCommand : public SceneCommand {
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	SceneChangeCommand::SceneChangeCommand(Scene* s);
	///
	/// \brief	Constructor. Sets the next scene to be used.
	///
	/// \param	s	The next scene.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	SceneChangeCommand(Scene* s);

	SceneChangeCommand() = delete;
	SceneChangeCommand(const SceneChangeCommand&) = delete;
	SceneChangeCommand& operator=(const SceneChangeCommand&) = delete;
	~SceneChangeCommand();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	virtual void SceneChangeCommand::SetScene(Scene* s);
	///
	/// \brief	Deletes the passed scene to prevent memory leaks.
	/// 		Only one scene can be loaded at a time.
	///
	/// \param	s	The extraneous scene to delete.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void SetScene(Scene* s);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	virtual void SceneChangeCommand::Execute();
	///
	/// \brief	Changes the current scene to the stored scene.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void Execute();
};

#endif
