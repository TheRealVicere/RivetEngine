#ifndef Actor_H
#define Actor_H

class ActorSpawn;
class GameObject;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	Actor
///
/// \brief	An object that can be spawned into and out of a scene.
///
/// \author	Mike Piunti
/// \date	05/23/2023
////////////////////////////////////////////////////////////////////////////////////////////////////
class Actor {
public:
	Actor();
	Actor(const Actor&) = delete;
	Actor& operator=(const Actor&) = delete;
	virtual ~Actor();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	virtual void Actor::EnterScene() = 0;
	///
	/// \brief	Makes this actor enter the scene.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void EnterScene() = 0;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	virtual void Actor::ExitScene() = 0;
	///
	/// \brief	Makes this actor exit the scene.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	virtual void ExitScene() = 0;
	
protected:
	/// \brief	The game object managing this actor's components.
	GameObject* go;

	/// \brief	The spawn callback.
	ActorSpawn* sp;
};

#endif
