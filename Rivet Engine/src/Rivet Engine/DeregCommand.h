#ifndef DeregCommand_H
#define DeregCommand_H

#include "RegDeregCommand.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	DeregCommand
///
/// \brief	A command used for component deregistration.
///
/// \author	Mike Piunti
/// \date	04/12/2023
////////////////////////////////////////////////////////////////////////////////////////////////////
class DeregCommand : public RegDeregCommand {
public:
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	DeregCommand::DeregCommand(Component* c);
	///
	/// \brief	Creates a command to deregister the given component.
	///
	/// \param	c	The component to deregister.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	DeregCommand(Component* c);

	DeregCommand() = delete;
	DeregCommand(const DeregCommand&) = delete;
	DeregCommand& operator=(const DeregCommand&) = delete;
	~DeregCommand() = default;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	void DeregCommand::Execute();
	///
	/// \brief	Deregisters the stored component.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void Execute();
};

#endif
