#ifndef DrawManager_H
#define DrawManager_H

#include <list>

class DrawComponent;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// \class	DrawManager
///
/// \brief	Manager for rendering objects to the display.
///
/// \author	Mike Piunti
/// \date	02/28/2023
////////////////////////////////////////////////////////////////////////////////////////////////////

class DrawManager {
private:
	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \typedef	std::list<DrawComponent*> StorageList
	///
	/// \brief	Defines an alias representing a list to store objects to be drawn.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	typedef std::list<DrawComponent*> StorageList;

	/// \brief	A list to store objects to be drawn.
	StorageList storageList;

public:
	DrawManager() = default;
	DrawManager(const DrawManager&) = delete;
	DrawManager& operator=(const DrawManager&) = delete;
	~DrawManager();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \typedef	StorageList::iterator StorageListRef
	///
	/// \brief	Defines an alias representing a reference to an object's location in the draw list.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	typedef StorageList::iterator StorageListRef;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	void DrawManager::ProcessElements();
	///
	/// \brief	Draws each object in the draw list.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void ProcessElements();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	StorageListRef DrawManager::Register(DrawComponent* dr);
	///
	/// \brief	Registers the given object for drawing.
	///
	/// \param	dr	The object to draw.
	///
	/// \returns	A reference to the object's location in the draw list.
	////////////////////////////////////////////////////////////////////////////////////////////////////
	StorageListRef Register(DrawComponent* dr);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \fn	void DrawManager::Deregister(DrawComponent* dr);
	///
	/// \brief	Deregisters the given object for drawing.
	/// 		
	/// \param	dr	The object to stop drawing.
	/////////////////////////////////////////////////////////////////////////////////////////////////
	void Deregister(DrawComponent* dr);
};

#endif
